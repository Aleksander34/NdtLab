// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NdtLab.Core;

#nullable disable

namespace NdtLab.Core.Migrations
{
    [DbContext(typeof(NdtLabContext))]
    [Migration("20221030150444_update")]
    partial class update
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("NdtLab.Core.employeesInfo.Division", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Divisions");
                });

            modelBuilder.Entity("NdtLab.Core.employeesInfo.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("DivisionId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Login")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MiddleName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PositionId")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DivisionId");

                    b.HasIndex("PositionId");

                    b.HasIndex("RoleId");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("NdtLab.Core.employeesInfo.Phone", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<string>("Number")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.ToTable("Phones");
                });

            modelBuilder.Entity("NdtLab.Core.employeesInfo.Position", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Positions");
                });

            modelBuilder.Entity("NdtLab.Core.employeesInfo.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("NdtLab.core.Inspections.Inspection", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsRequired")
                        .HasColumnType("bit");

                    b.Property<int>("JointId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ReportDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ReportNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Result")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("JointId");

                    b.ToTable("Inspections");
                });

            modelBuilder.Entity("NdtLab.core.Inspections.InspectionEmployee", b =>
                {
                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<int>("InspectionId")
                        .HasColumnType("int");

                    b.HasKey("EmployeeId", "InspectionId");

                    b.HasIndex("InspectionId");

                    b.ToTable("InspectionEmployees");
                });

            modelBuilder.Entity("NdtLab.Core.Joints.Difficult", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Difficults");
                });

            modelBuilder.Entity("NdtLab.Core.Joints.DifficultJoint", b =>
                {
                    b.Property<int>("JointId")
                        .HasColumnType("int");

                    b.Property<int>("DifficultId")
                        .HasColumnType("int");

                    b.HasKey("JointId", "DifficultId");

                    b.HasIndex("DifficultId");

                    b.ToTable("DifficultJoints");
                });

            modelBuilder.Entity("NdtLab.core.Joints.Joint", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ConnectionType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("DiameterOne")
                        .HasColumnType("float");

                    b.Property<double>("DiameterTwo")
                        .HasColumnType("float");

                    b.Property<string>("ElementOne")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ElementTwo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GradeOne")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GradeTwo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InspectionCompany")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Number")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ReestrId")
                        .HasColumnType("int");

                    b.Property<int>("RequestId")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("ThicknessOne")
                        .HasColumnType("float");

                    b.Property<double>("ThicknessTwo")
                        .HasColumnType("float");

                    b.Property<double?>("WeldLength")
                        .HasColumnType("float");

                    b.Property<DateTime>("WeldingDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("WeldingType")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ReestrId");

                    b.HasIndex("RequestId");

                    b.ToTable("Joints");
                });

            modelBuilder.Entity("NdtLab.Core.Joints.Reestr", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Number")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Recipient")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sender")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Reestrs");
                });

            modelBuilder.Entity("NdtLab.Core.Requests.PipeLine", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Distance")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PipeLines");
                });

            modelBuilder.Entity("NdtLab.Core.Requests.Piping", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Line")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Spool")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Zone")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Pipings");
                });

            modelBuilder.Entity("NdtLab.Core.Requests.Qualification", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Qualifications");
                });

            modelBuilder.Entity("NdtLab.Core.Requests.ReferencesDoc", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("InspectionDoc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MainDoc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("QualityCriteria")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WeldingDoc")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ReferencesDocs");
                });

            modelBuilder.Entity("NdtLab.Core.Requests.Request", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CategoryGost")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("DivisionId")
                        .HasColumnType("int");

                    b.Property<string>("Draw")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Number")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Object")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OtherCategory")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PartObject")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PipeLineId")
                        .HasColumnType("int");

                    b.Property<int?>("PipingId")
                        .HasColumnType("int");

                    b.Property<int?>("QualificationId")
                        .HasColumnType("int");

                    b.Property<bool?>("Rebar")
                        .HasColumnType("bit");

                    b.Property<int?>("ReferencesDocId")
                        .HasColumnType("int");

                    b.Property<int?>("SteelStructureId")
                        .HasColumnType("int");

                    b.Property<int?>("TankId")
                        .HasColumnType("int");

                    b.Property<int?>("Temperature")
                        .HasColumnType("int");

                    b.Property<string>("WeldingCompany")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DivisionId");

                    b.HasIndex("PipeLineId");

                    b.HasIndex("PipingId");

                    b.HasIndex("QualificationId");

                    b.HasIndex("ReferencesDocId");

                    b.HasIndex("SteelStructureId");

                    b.HasIndex("TankId");

                    b.ToTable("Requests");
                });

            modelBuilder.Entity("NdtLab.Core.Requests.SteelStructure", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Part")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sector")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("SteelStructures");
                });

            modelBuilder.Entity("NdtLab.Core.Requests.Tank", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Part")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Tanks");
                });

            modelBuilder.Entity("NdtLab.core.Welders.Welder", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Stamp")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Welders");
                });

            modelBuilder.Entity("NdtLab.core.Welders.WelderJoint", b =>
                {
                    b.Property<int>("WelderId")
                        .HasColumnType("int");

                    b.Property<int>("JointId")
                        .HasColumnType("int");

                    b.HasKey("WelderId", "JointId");

                    b.HasIndex("JointId");

                    b.ToTable("WelderJoints");
                });

            modelBuilder.Entity("NdtLab.Core.employeesInfo.Employee", b =>
                {
                    b.HasOne("NdtLab.Core.employeesInfo.Division", "Division")
                        .WithMany()
                        .HasForeignKey("DivisionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NdtLab.Core.employeesInfo.Position", "Position")
                        .WithMany("Users")
                        .HasForeignKey("PositionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NdtLab.Core.employeesInfo.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Division");

                    b.Navigation("Position");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("NdtLab.Core.employeesInfo.Phone", b =>
                {
                    b.HasOne("NdtLab.Core.employeesInfo.Employee", "Employee")
                        .WithMany("Phones")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("NdtLab.core.Inspections.Inspection", b =>
                {
                    b.HasOne("NdtLab.core.Joints.Joint", "Joint")
                        .WithMany()
                        .HasForeignKey("JointId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Joint");
                });

            modelBuilder.Entity("NdtLab.core.Inspections.InspectionEmployee", b =>
                {
                    b.HasOne("NdtLab.Core.employeesInfo.Employee", "Employee")
                        .WithMany("InspectionEmployees")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NdtLab.core.Inspections.Inspection", "Inspection")
                        .WithMany("InspectionEmployees")
                        .HasForeignKey("InspectionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");

                    b.Navigation("Inspection");
                });

            modelBuilder.Entity("NdtLab.Core.Joints.DifficultJoint", b =>
                {
                    b.HasOne("NdtLab.Core.Joints.Difficult", "Difficult")
                        .WithMany("DifficultJoints")
                        .HasForeignKey("DifficultId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NdtLab.core.Joints.Joint", "Joint")
                        .WithMany("DifficultJoints")
                        .HasForeignKey("JointId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Difficult");

                    b.Navigation("Joint");
                });

            modelBuilder.Entity("NdtLab.core.Joints.Joint", b =>
                {
                    b.HasOne("NdtLab.Core.Joints.Reestr", "Reestr")
                        .WithMany()
                        .HasForeignKey("ReestrId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NdtLab.Core.Requests.Request", "Request")
                        .WithMany()
                        .HasForeignKey("RequestId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Reestr");

                    b.Navigation("Request");
                });

            modelBuilder.Entity("NdtLab.Core.Requests.Request", b =>
                {
                    b.HasOne("NdtLab.Core.employeesInfo.Division", "Division")
                        .WithMany()
                        .HasForeignKey("DivisionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NdtLab.Core.Requests.PipeLine", "PipeLine")
                        .WithMany()
                        .HasForeignKey("PipeLineId");

                    b.HasOne("NdtLab.Core.Requests.Piping", "Piping")
                        .WithMany()
                        .HasForeignKey("PipingId");

                    b.HasOne("NdtLab.Core.Requests.Qualification", "Qualification")
                        .WithMany()
                        .HasForeignKey("QualificationId");

                    b.HasOne("NdtLab.Core.Requests.ReferencesDoc", "ReferencesDoc")
                        .WithMany()
                        .HasForeignKey("ReferencesDocId");

                    b.HasOne("NdtLab.Core.Requests.SteelStructure", "SteelStructure")
                        .WithMany()
                        .HasForeignKey("SteelStructureId");

                    b.HasOne("NdtLab.Core.Requests.Tank", "Tank")
                        .WithMany()
                        .HasForeignKey("TankId");

                    b.Navigation("Division");

                    b.Navigation("PipeLine");

                    b.Navigation("Piping");

                    b.Navigation("Qualification");

                    b.Navigation("ReferencesDoc");

                    b.Navigation("SteelStructure");

                    b.Navigation("Tank");
                });

            modelBuilder.Entity("NdtLab.core.Welders.WelderJoint", b =>
                {
                    b.HasOne("NdtLab.core.Joints.Joint", "Joint")
                        .WithMany("WelderJoints")
                        .HasForeignKey("JointId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NdtLab.core.Welders.Welder", "Welder")
                        .WithMany("WelderJoints")
                        .HasForeignKey("WelderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Joint");

                    b.Navigation("Welder");
                });

            modelBuilder.Entity("NdtLab.Core.employeesInfo.Employee", b =>
                {
                    b.Navigation("InspectionEmployees");

                    b.Navigation("Phones");
                });

            modelBuilder.Entity("NdtLab.Core.employeesInfo.Position", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("NdtLab.Core.employeesInfo.Role", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("NdtLab.core.Inspections.Inspection", b =>
                {
                    b.Navigation("InspectionEmployees");
                });

            modelBuilder.Entity("NdtLab.Core.Joints.Difficult", b =>
                {
                    b.Navigation("DifficultJoints");
                });

            modelBuilder.Entity("NdtLab.core.Joints.Joint", b =>
                {
                    b.Navigation("DifficultJoints");

                    b.Navigation("WelderJoints");
                });

            modelBuilder.Entity("NdtLab.core.Welders.Welder", b =>
                {
                    b.Navigation("WelderJoints");
                });
#pragma warning restore 612, 618
        }
    }
}
